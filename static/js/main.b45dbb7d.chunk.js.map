{"version":3,"sources":["context/auth/authContext.js","context/alert/alertContext.js","components/auth/Register.js","context/user/userContext.js","components/user/UserAccount.js","components/user/BeneficiaryInforPage.js","components/user/ChangePasswordPage.js","components/user/transferPageAtom/BeneficiaryAccount.js","components/user/TransferPage.js","components/user/transactionsPage/TransactionsPage.js","components/layout/NavBar.js","components/pages/Home.js","components/auth/Login.js","components/layout/Alerts.js","components/routing/PrivateRoute.js","context/employee/employeeContext.js","utils/setAuthToken.js","context/employee/employeeState.js","context/admin/adminContext.js","context/admin/adminReducer.js","context/types.js","context/admin/adminState.js","context/auth/authReducer.js","context/auth/AuthState.js","context/alert/alertReducer.js","context/alert/AlertState.js","context/user/userReducer.js","context/user/userState.js","App.js","serviceWorker.js","index.js"],"names":["authContext","createContext","alertContext","Option","Select","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","Register","props","Form","useForm","form","prefixSelector","Item","name","noStyle","style","width","value","onFinish","values","console","log","initialValues","residence","prefix","scrollToFirstError","label","rules","required","type","message","hasFeedback","Password","dependencies","getFieldValue","validator","rule","Promise","reject","resolve","addonBefore","htmlType","UserContext","UserAccount","userContext","useContext","AlertContext","accountsOwner","setAlert","alerts","className","map","acc","i","key","account_number","account_balance","accountsInfor","EditableContext","React","EditableRow","index","component","Provider","EditableCell","title","editable","children","dataIndex","record","handleSave","restProps","useState","editing","setEditing","inputRef","useRef","useEffect","current","focus","toggleEdit","setFieldsValue","save","e","a","validateFields","childNode","margin","ref","onPressEnter","onBlur","paddingRight","onClick","BeneficiaryInforPage","beneficiaries","addBeneficiary","addBeneficiaryRes","updateListBeneficiaryInfo","dataSource","setDataSource","visible","setVisible","row","newRow","newData","findIndex","item","beneficiary_account","splice","components","body","cell","columns","render","text","length","onConfirm","handleDelete","DeleteOutlined","col","onCell","marginBottom","onOk","onCancel","remember","accountnumber","remindname","onFinishFailed","errorInfo","placeholder","rowKey","rowClassName","bordered","filter","ChangePasswordPage","changePassword","oldPassword","newPassword","Panel","Collapse","layout","renderItem","count","display","justifyContent","UserOutlined","options","partner_bank","beneficiary_name","BeneficiaryAccount","beneficiary","getBeneficiry","collapse","setCollapse","accountBeneficiary","setAccountBeneficiary","isSaveBeneficiary","setIsSaveBeneficiary","savebleBeneficiary","setSavebleBeneficiary","bank","autoFocus","account","accounts","dropdownClassName","onSelect","forEach","Search","size","onSearch","disabled","onChange","activeKey","expandIcon","isActive","CaretRightOutlined","rotate","header","info","accountInfo","Step","Steps","TransferPage","dataSourceDefault","columnsDefault","types","TransactionsPage","transactions","getTransactions","validateTransactionsData","list","element","timeString","Date","timestamp","toDateString","id","selectedAccount","receivers","transfers","debts","SubMenu","Menu","comp","content","NavBar","logout","AuthContext","collapsed","setKey","defaultSelectedKeys","defaultOpenKeys","mode","theme","inlineCollapsed","icon","PieChartOutlined","DesktopOutlined","ContainerOutlined","MailOutlined","AppstoreOutlined","LogoutOutlined","Home","getBeneficiries","getAccounts","error","success","Login","login","clearErrors","isAuthenticated","history","push","Alerts","alert","msg","PrivateRoute","Component","rest","localStorage","getItem","to","employeeContext","setAuthToken","token","axios","defaults","headers","common","EmployeeState","initialState","loading","useReducer","employeeReducer","adminContext","state","action","AdminState","adminReducer","setItem","JSON","stringify","payload","user","removeItem","AuthState","authReducer","dispatch","formData","config","post","res","data","response","AlertState","alertReducer","timeout","uuidv4","setTimeout","UserState","userReducer","parse","get","contact","listInfo","passwords","put","accnumber","accountNumber","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.b45dbb7d.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst authContext = createContext();\n\nexport default authContext;\n","import { createContext } from 'react';\n\nconst alertContext = createContext();\n\nexport default alertContext;\n","\nimport React, { useState, useEffect, useContext } from 'react';\nimport {\n    Form,\n    Input,\n    Select,\n    Button\n} from 'antd';\nimport { QuestionCircleOutlined } from '@ant-design/icons';\nimport AlertContext from '../../context/alert/alertContext';\nimport AuthContext from '../../context/auth/authContext';\n\n\nconst { Option } = Select;\n\nconst formItemLayout = {\n    labelCol: {\n        xs: {\n            span: 24,\n        },\n        sm: {\n            span: 8,\n        },\n    },\n    wrapperCol: {\n        xs: {\n            span: 24,\n        },\n        sm: {\n            span: 16,\n        },\n    },\n};\nconst tailFormItemLayout = {\n    wrapperCol: {\n        xs: {\n            span: 24,\n            offset: 0,\n        },\n        sm: {\n            span: 16,\n            offset: 8,\n        },\n    },\n};\n\nconst Register = (props) => {\n    // const alertContext = useContext(AlertContext);\n    // const authContext = useContext(AuthContext);\n\n    // const { setAlert } = alertContext;\n    // const { error, clearErrors, isAuthenticated } = authContext;\n\n    // useEffect(() => {\n    //     console.log(props)\n    //     if (isAuthenticated) {\n    //         props.history.push('/');\n    //     }\n\n    //     if (error === 'User already exists') {\n    //         setAlert(error, 'danger');\n    //         clearErrors();\n    //     }\n    //     // eslint-disable-next-line\n    // }, [error, isAuthenticated, props.history]);\n\n    const [form] = Form.useForm();\n\n    const onFinish = values => {\n        console.log('Received values of form: ', values);\n\n\n    };\n\n    const prefixSelector = (\n        <Form.Item name=\"prefix\" noStyle>\n            <Select\n                style={{\n                    width: 70,\n                }}\n            >\n                <Option value=\"86\">+86</Option>\n                <Option value=\"87\">+87</Option>\n            </Select>\n        </Form.Item>\n    );\n\n\n    return (\n        <div >\n            <Form\n                {...formItemLayout}\n                form={form}\n                name=\"register\"\n                onFinish={onFinish}\n                initialValues={{\n                    residence: ['zhejiang', 'hangzhou', 'xihu'],\n                    prefix: '86',\n                }}\n                scrollToFirstError\n            >\n                <Form.Item name='username' label=\"username\" rules={[{ required: true }]}>\n                    <Input />\n                </Form.Item>\n                <Form.Item name='fullname' label=\"fullname\" rules={[{ required: true }]}>\n                    <Input />\n                </Form.Item>\n                <Form.Item\n                    name=\"email\"\n                    label=\"E-mail\"\n                    rules={[\n                        {\n                            type: 'email',\n                            message: 'The input is not valid E-mail!',\n                        },\n                        {\n                            required: true,\n                            message: 'Please input your E-mail!',\n                        },\n                    ]}\n                >\n                    <Input />\n                </Form.Item>\n\n                <Form.Item\n                    name=\"password\"\n                    label=\"Password\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Please input your password!',\n                        },\n                    ]}\n                    hasFeedback\n                >\n                    <Input.Password />\n                </Form.Item>\n\n                <Form.Item\n                    name=\"confirm\"\n                    label=\"Confirm Password\"\n                    dependencies={['password']}\n                    hasFeedback\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Please confirm your password!',\n                        },\n                        ({ getFieldValue }) => ({\n                            validator(rule, value) {\n                                if (!value || getFieldValue('password') === value) {\n                                    return Promise.resolve();\n                                }\n\n                                return Promise.reject('The two passwords that you entered do not match!');\n                            },\n                        }),\n                    ]}\n                >\n                    <Input.Password />\n                </Form.Item>\n\n\n                <Form.Item\n                    name=\"phone\"\n                    label=\"Phone Number\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Please input your phone number!',\n                        },\n                    ]}\n                >\n                    <Input\n                        addonBefore={prefixSelector}\n                        style={{\n                            width: '100%',\n                        }}\n                    />\n                </Form.Item>\n\n                <Form.Item {...tailFormItemLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        Register\n        </Button>\n                </Form.Item>\n            </Form>\n        </div>\n    );\n};\n\n\nexport default Register\n\n","import { createContext } from \"react\";\n\nconst UserContext = createContext();\n\nexport default UserContext;\n","\nimport React, { useEffect, useContext } from 'react'\nimport UserContext from '../../context/user/userContext'\nimport AlertContext from '../../context/alert/alertContext';\n\n// const accountsOwner = []\nconst UserAccount = (props) => {\n    const userContext = useContext(UserContext)\n    const alertContext = useContext(AlertContext);\n\n    const { accountsOwner } = userContext;\n    const { setAlert, alerts } = alertContext;\n\n    // useEffect(() => {\n    //     getAccounts();\n    // }, [])\n    // useEffect(() => {\n    //     console.log(alerts)\n    // }, [alerts, ])\n\n    const accountsInfor = (accountsOwner = []) => (\n        accountsOwner.map((acc, i) =>\n            <div key={i} className=\"container ml-5\">\n                <div><b>So tai khoan:</b>  {acc.account_number}</div>\n                <div><b>So du hien tai:</b> {acc.account_balance} VND</div>\n                <div><b>Loai tai khoan:</b> {acc.type === 1 ? <span>Thanh toan</span> : <span>Tiet kiem</span>}</div>\n                <br />\n            </div>\n        )\n    )\n\n    return (\n        <div >\n            <hr />\n            <div className=\"mt-5\">\n                {accountsInfor(accountsOwner)}\n            </div>\n\n        </div>\n    )\n}\n\nexport default UserAccount\n","\nimport React, { useContext, useState, useEffect, useRef } from 'react';\nimport { Table, Input, Button, Popconfirm, Form, Modal } from 'antd';\nimport { DeleteOutlined } from '@ant-design/icons'\n\nimport UserContext from '../../context/user/userContext'\n\n\nconst EditableContext = React.createContext();\n\nconst EditableRow = ({ index, ...props }) => {\n    const [form] = Form.useForm();\n    return (\n        <Form form={form} component={false}>\n            <EditableContext.Provider value={form}>\n                <tr {...props} />\n            </EditableContext.Provider>\n        </Form>\n    );\n};\n\nconst EditableCell = ({\n    title,\n    editable,\n    children,\n    dataIndex,\n    record,\n    handleSave,\n    ...restProps\n}) => {\n    const [editing, setEditing] = useState(false);\n    const inputRef = useRef();\n    const form = useContext(EditableContext);\n    useEffect(() => {\n        if (editing) {\n            inputRef.current.focus();\n        }\n    }, [editing]);\n\n    const toggleEdit = () => {\n        setEditing(!editing);\n        form.setFieldsValue({\n            [dataIndex]: record[dataIndex],\n        });\n    };\n\n    const save = async e => {\n        try {\n            const values = await form.validateFields();\n            toggleEdit();\n            handleSave({ ...record, ...values });\n        } catch (errInfo) {\n            console.log('Save failed:', errInfo);\n        }\n    };\n\n    let childNode = children;\n\n    if (editable) {\n        childNode = editing ? (\n            <Form.Item\n                style={{\n                    margin: 0,\n                }}\n                name={dataIndex}\n                rules={[\n                    {\n                        required: true,\n                        message: `${title} is required.`,\n                    },\n                ]}\n            >\n                <Input ref={inputRef} onPressEnter={save} onBlur={save} />\n            </Form.Item>\n        ) : (\n                <div\n                    className=\"editable-cell-value-wrap\"\n                    style={{\n                        paddingRight: 24,\n                    }}\n                    onClick={toggleEdit}\n                >\n                    {children}\n                </div>\n            );\n    }\n\n    return <td {...restProps}>{childNode}</td>;\n};\nconst BeneficiaryInforPage = () => {\n\n    const userContext = useContext(UserContext)\n\n    const { beneficiaries, addBeneficiaryRes, addBeneficiary, updateListBeneficiaryInfo } = userContext\n\n    const [dataSource, setDataSource] = useState(\n        beneficiaries\n    )\n    const [visible, setVisible] = useState(false)\n\n    const handleDelete = row => {\n\n        // const { beneficiary_account } = record\n        // const dataSources = [...dataSource];\n        // setDataSource(dataSources.filter(item => item.beneficiary_account !== beneficiary_account));\n\n        const newRow = { ...row, type: \"del\" }\n        const newData = [...dataSource];\n        const index = newData.findIndex(item => newRow.beneficiary_account === item.beneficiary_account);\n        const item = newData[index];\n        newData.splice(index, 1, { ...item, ...newRow });\n        setDataSource(newData)\n    };\n\n    const handleSave = row => {\n        // const newData = [...dataSource];\n        // const index = newData.findIndex(item => row.key === item.key);\n        // const item = newData[index];\n        // newData.splice(index, 1, { ...item, ...row });\n\n\n\n        const newRow = { ...row, type: \"update\" }\n        const newData = [...dataSource];\n        const index = newData.findIndex(item => newRow.beneficiary_account === item.beneficiary_account);\n        const item = newData[index];\n        newData.splice(index, 1, { ...item, ...newRow });\n\n        setDataSource(newData)\n\n    };\n\n\n    const columnsDefault = [\n        {\n            title: 'name',\n            dataIndex: 'beneficiary_name',\n            width: '30%',\n            editable: true,\n        },\n        {\n            title: 'account number',\n            dataIndex: 'beneficiary_account',\n        },\n        {\n            title: 'operation',\n            dataIndex: 'operation',\n            render: (text, record) =>\n                beneficiaries.length >= 1 ? (\n                    <Popconfirm title=\"Sure to delete?\" onConfirm={() => handleDelete(record)}>\n                        <a className=\"text-danger\"><DeleteOutlined /> Delete  </a>\n                    </Popconfirm>\n                ) : null,\n        },\n    ];\n\n    const components = {\n        body: {\n            row: EditableRow,\n            cell: EditableCell,\n        },\n    };\n    const columns = columnsDefault.map(col => {\n        if (!col.editable) {\n            return col;\n        }\n\n        return {\n            ...col,\n            onCell: record => ({\n                record,\n                editable: col.editable,\n                dataIndex: col.dataIndex,\n                title: col.title,\n                handleSave: handleSave,\n            }),\n        };\n    });\n\n    const onFinish = values => {\n        // const { addBeneficiary } = this.props\n        addBeneficiary({\n            beneficiary_account: values.accountnumber,\n            name: values.remindname || ''\n        })\n\n        if (!addBeneficiaryRes) {\n            //change state here for add\n        }\n    };\n\n    const onFinishFailed = errorInfo => {\n        console.log('Failed:', errorInfo);\n    };\n\n    const onSaveChanges = () => {\n        // useEffect\n        // useEffect(() => {\n        updateListBeneficiaryInfo(dataSource)\n        // }, [])\n    }\n\n    // console.log(dataSource);\n    return (\n        <div>\n            <Button\n                onClick={() => setVisible(true)}\n                type=\"primary\"\n                style={{\n                    marginBottom: 16,\n                }}\n            >\n                Add a beneficiry\n        </Button>\n            <div>\n                <Modal\n                    title=\"Basic Modal\"\n                    visible={visible}\n                    onOk={() => setVisible(false)}\n                    onCancel={() => setVisible(false)}\n                >\n                    <Form\n                        name=\"basic\"\n                        initialValues={{ remember: true }}\n                        onFinish={onFinish}\n                        onFinishFailed={onFinishFailed}\n                    >\n                        <Form.Item\n                            name=\"remindname\"\n                        // rules={[{ required: true, message: 'Please input beneficiary name!' }]}\n                        >\n                            <Input placeholder=\"Remind Name\" />\n                        </Form.Item>\n\n                        <Form.Item\n                            name=\"accountnumber\"\n                            rules={[{ required: true, message: 'Please input beneficiary account number!' }]}\n                        >\n                            <Input placeholder=\"beneficiary account number\" />\n                        </Form.Item>\n\n                        <Form.Item >\n                            <Button type=\"primary\" htmlType=\"submit\">\n                                Submit\n        </Button>\n                        </Form.Item>\n                    </Form>\n                </Modal>\n            </div>\n            <Table rowKey=\"beneficiary_account\"\n                components={components}\n                rowClassName={() => 'editable-row'}\n                bordered\n                dataSource={dataSource.filter(item => item.type !== \"del\")}\n                columns={columns}\n            />\n            <Button onClick={onSaveChanges}>Save changes</Button>\n        </div>\n    );\n}\nexport default BeneficiaryInforPage","import React, { useContext } from \"react\";\nimport { Form, Input, Button } from \"antd\";\nimport UserContext from \"../../context/user/userContext\";\n\nconst ChangePasswordPage = () => {\n  const userContext = useContext(UserContext);\n\n  const { changePassword } = userContext;\n  const onFinish = (values) => {\n    console.log(\"Success:\", values);\n    changePassword({\n      oldPassword: values.oldPassword,\n      newPassword: values.newPassword,\n    });\n    // this.setState({\n    //     ...values,\n    // });\n\n    // const { onChangePassword } = this.props;\n\n    // if (onChangePassword) {\n    //     onChangePassword({\n    //         oldpassword: this.state.password,\n    //         newpassword: this.state.newPassword,\n    //     });\n    // }\n  };\n\n  const onFinishFailed = (errorInfo) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  return (\n    <div className=\"m-5 p-5 border shadow p-3 mb-5 bg-white rounded\">\n      <Form\n        // {...layout}\n        name=\"basic\"\n        initialValues={{ remember: true }}\n        onFinish={onFinish}\n        onFinishFailed={onFinishFailed}\n      >\n        <Form.Item\n          label=\"Password\"\n          name=\"oldPassword\"\n          rules={[{ required: true, message: \"Please input your password!\" }]}\n        >\n          <Input.Password />\n        </Form.Item>\n\n        <Form.Item\n          name=\"newPassword\"\n          label=\"New Password\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input your password!\",\n            },\n          ]}\n          hasFeedback\n        >\n          <Input.Password />\n        </Form.Item>\n\n        <Form.Item\n          name=\"confirmPassword\"\n          label=\"Confirm Password\"\n          dependencies={[\"newPassword\"]}\n          hasFeedback\n          rules={[\n            {\n              required: true,\n              message: \"Please confirm your password!\",\n            },\n            ({ getFieldValue }) => ({\n              validator(rule, value) {\n                if (!value || getFieldValue(\"newPassword\") === value) {\n                  return Promise.resolve();\n                }\n                return Promise.reject(\n                  \"The two passwords that you entered do not match!\"\n                );\n              },\n            }),\n          ]}\n        >\n          <Input.Password />\n        </Form.Item>\n\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Submit\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n};\n\nexport default ChangePasswordPage;\n","import React, { useContext, useState } from \"react\";\n\nimport {\n  Collapse,\n  Form,\n  AutoComplete,\n  Input,\n  Button,\n  Select,\n  Checkbox,\n} from \"antd\";\nimport { UserOutlined, CaretRightOutlined } from \"@ant-design/icons\";\n\nimport UserContext from \"../../../context/user/userContext\";\n\nconst { Panel } = Collapse;\n\nconst { Option } = Select;\nconst layout = {\n  labelCol: { span: 8 },\n  wrapperCol: { span: 16 },\n};\n\nconst accountInfo = (info = {}) => (\n  <div>\n    <p>\n      <b>Beneficiary's Name:</b> {info.beneficiary_name}\n    </p>\n    <p>\n      <b>Account Number : </b>\n      {info.beneficiary_account}\n    </p>\n  </div>\n);\n\nconst renderItem = (title, count) => ({\n  value: title,\n  label: (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"space-between\",\n      }}\n    >\n      {title}\n      <span>\n        <UserOutlined /> {count}\n      </span>\n    </div>\n  ),\n});\n\nconst options = (values = []) => [\n  {\n    options: values.map(\n      (value, i) =>\n        value.partner_bank === null &&\n        renderItem(value.beneficiary_account, value.beneficiary_name)\n    ),\n  },\n];\n\nconst accounts = (account = []) =>\n  account.map((acc, i) => (\n    <Option value={acc.account_number} key={i}>\n      {acc.account_number}\n    </Option>\n  ));\n\nconst BeneficiaryAccount = () => {\n  const userContext = useContext(UserContext);\n\n  const {\n    beneficiaries,\n    beneficiary,\n    accountsOwner,\n    getBeneficiry,\n  } = userContext;\n\n  const [collapse, setCollapse] = useState(true);\n  const [beneficiaryAcc, setBeneficiaryAcc] = useState({});\n  const [accountBeneficiary, setAccountBeneficiary] = useState({});\n  const [isSaveBeneficiary, setIsSaveBeneficiary] = useState(false);\n  const [savebleBeneficiary, setSavebleBeneficiary] = useState(false);\n\n  const searchInfor = (value) => {\n    console.log(value);\n    let isExist = false;\n    beneficiaries.forEach((acc) => {\n      if (acc.beneficiary_account === value) {\n        console.log(\"value\", isExist, value);\n        isExist = true;\n        return;\n      }\n    });\n    //return here bug\n    if (!isExist) {\n      // const { getBeneficiaryAccount } = this.props\n      getBeneficiry({ account_number: value });\n\n      if (beneficiary) {\n        setBeneficiaryAcc(beneficiary);\n        setCollapse(\"1\");\n        setSavebleBeneficiary(true);\n      }\n    }\n  };\n\n  const onSelect = (value) => {\n    beneficiaries.forEach((acc) => {\n      if (acc.beneficiary_account === value) {\n        console.log(\"value\", acc);\n        setAccountBeneficiary(acc);\n        setCollapse(\"1\");\n        setSavebleBeneficiary(false);\n      }\n    });\n    // this.props.listAccountBeneficiary.forEach(acc => {\n    //     if (acc.beneficiary_account === value) {\n    //         this.setState({\n    //             accountBeneficiary: { ...acc },\n    //             Collapse: \"1\",\n    //             isDisable: true\n    //         })\n    //         return\n    //     }\n    // });\n  };\n  const onFinishFailed = (errorInfo) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  // const { accountOwner, listAccountBeneficiary } = this.props\n  // const { accountBeneficiary } = this.state\n\n  // console.log(this.props);\n  // const accountOwner = []\n  return (\n    <div>\n      <Form\n        {...layout}\n        name=\"basic\"\n        initialValues={{ remember: true, bank: \"NKLBank\" }}\n        // onFinish={(data) => this.props.onNext({ isSaveBeneficiary: this.state.isSaveBeneficiary, ...data })}\n        onFinishFailed={onFinishFailed}\n      >\n        <Form.Item\n          label=\"Your account\"\n          className=\"border-bottom border-light p-3\"\n          name=\"depositor\"\n          rules={[\n            {\n              required: true,\n              message: \"Please choose your account!\",\n            },\n          ]}\n        >\n          <Select autoFocus placeholder=\"Select your account\">\n            {accounts(accountsOwner)}\n          </Select>\n        </Form.Item>\n        <Form.Item\n          label=\"Beneficiary\"\n          className=\"border-bottom border-light p-3\"\n          name=\"receiver\"\n          rules={[\n            {\n              required: true,\n              message: \"Please choose beneficiary!\",\n            },\n          ]}\n        >\n          <AutoComplete\n            dropdownClassName=\"certain-category-search-dropdown\"\n            options={options(beneficiaries)}\n            onSelect={onSelect}\n          >\n            <Input.Search\n              size=\"large\"\n              placeholder=\"input here\"\n              onSearch={(value) => console.log(value)}\n            />\n          </AutoComplete>\n        </Form.Item>\n\n        <Form.Item\n          label=\"Save Beneficiary\"\n          className=\"border-bottom border-light pl-3\"\n        >\n          <Checkbox\n            disabled={!savebleBeneficiary}\n            onChange={() => setIsSaveBeneficiary(!isSaveBeneficiary)}\n          >\n            {\" \"}\n          </Checkbox>\n        </Form.Item>\n        <Collapse\n          activeKey={[collapse]}\n          bordered={true}\n          expandIcon={({ isActive }) => (\n            <CaretRightOutlined rotate={isActive ? 90 : 0} />\n          )}\n          className=\"site-collapse-custom-collapse bg-light mb-4\"\n        >\n          <Panel\n            header=\"Beneficiary's Information\"\n            key=\"1\"\n            className=\"site-collapse-custom-panel\"\n          >\n            {accountInfo(accountBeneficiary)}\n          </Panel>\n        </Collapse>\n\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Next\n          </Button>\n        </Form.Item>\n      </Form>\n\n      {/* --------------------------- */}\n    </div>\n  );\n};\n\nexport default BeneficiaryAccount;\n\n//end\n//---------------------------------------------------//\n\n// class Beneficiary extends Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             isSaveBeneficiary: false,\n//             isDisable: true,\n//             Collapse: 0,\n//             accountBeneficiary: {}\n//         }\n//     }\n\n//     render() {\n//         // const onFinish = values => {\n//         //     console.log(this.props.value);\n//         //     const transferAccountInfo = {\n//         //         ...values\n//         //     }\n\n//         //     localStorage.setItem(\"transferAccountInfo\", JSON.stringify(transferAccountInfo));\n//         // };\n\n//     }\n// }\n\n// const mapStateToProps = (state) => {\n//     const users = state.users\n//     return {\n//         accountOwner: users.accountOwner,\n//         accountBeneficiary: users.accountBeneficiary,\n//         listAccountBeneficiary: users.accountBeneficiarys,\n//         // addError: users.addError,\n//         users: state.users\n\n//     };\n// }\n\n// const mapDispatchToProps = (dispatch) => ({\n//     // getAccount: () => dispatch(userActions.getAccount()),\n//     getBeneficiaryAccount: (accNumber) => dispatch(userActions.getBeneficiaryAccount(accNumber)),\n//     // getListBeneficiaryAccount: () => dispatch(userActions.getBeneficiaryAccounts()),\n//     // addBeneficiary: (beneficiaryInfo) => dispatch(userActions.addBeneficiary(beneficiaryInfo)),\n// });\n","import React from 'react'\nimport { Steps } from 'antd';\n\nimport BeneficiaryAccount from \"./transferPageAtom/BeneficiaryAccount\";\nconst { Step } = Steps;\n\nconst TransferPage = () => {\n    return (\n        <div>\n            <BeneficiaryAccount />\n            <Steps size=\"small\" current={1}>\n                <Step title=\"Finished\" />\n                <Step title=\"In Progress\" />\n                <Step title=\"Waiting\" />\n            </Steps>\n        </div>\n    )\n}\n\nexport default TransferPage;","import React, { useState, useContext } from \"react\";\nimport { Form, Select, Table } from \"antd\";\nimport UserContext from \"../../../context/user/userContext\";\nconst { Option } = Select;\n\nconst layout = {\n  labelCol: { span: 8 },\n  wrapperCol: { span: 16 },\n};\n\nconst dataSourceDefault = [];\nconst columnsDefault = [\n  {\n    title: \"Tài khoản gửi\",\n    dataIndex: \"depositor\",\n    key: \"depositor\",\n  },\n  {\n    title: \"Người nhận\",\n    dataIndex: \"receiver\",\n    key: \"receiver\",\n  },\n  {\n    title: \"Số tiền\",\n    dataIndex: \"amount\",\n    key: \"amount\",\n  },\n  {\n    title: \"Thời gian\",\n    dataIndex: \"timestamp\",\n    key: \"timestamp\",\n  },\n  {\n    title: \"Ghi chú\",\n    dataIndex: \"note\",\n    key: \"note\",\n  },\n];\nconst types = [\n  { title: \"Chuyển tiền\", key: \"transfer\" },\n  {\n    title: \"Nhận tiền\",\n    key: \"receiver\",\n  },\n  {\n    title: \"Trả nợ\",\n    key: \"debt\",\n  },\n];\nconst TransactionsPage = (props) => {\n  const userContext = useContext(UserContext);\n  const { transactions, accountsOwner, getTransactions } = userContext;\n  const [dataSource, setDataSource] = useState(dataSourceDefault);\n  const [columns, setColumns] = useState(columnsDefault);\n  const [selectedAccount, setSelectedAccount] = useState();\n\n  const onAccountSelected = (selectedAccount) => {\n    console.log(\"finish \", selectedAccount);\n    getTransactions(selectedAccount);\n  };\n\n  const onAccountFinishFailed = () => {};\n\n  const Types = (types) => {\n    console.log(types);\n    return types.map((item) => (\n      <Option title={item.title} value={item.key} key={item.key}>\n        {\" \"}\n        {item.title}\n      </Option>\n    ));\n  };\n\n  const accounts = (accounts = []) =>\n    //<Option></Option>\n    accounts.map((acc, i) => (\n      <Option value={acc.account_number} key={i}>\n        {acc.account_number}\n      </Option>\n    ));\n\n  const renderListTransactions = (type) => {\n    console.log(\"type\", transactions);\n    switch (type) {\n      case \"receiver\":\n        setDataSource(validateTransactionsData(transactions.receivers));\n        break;\n      case \"transfer\":\n        setDataSource(validateTransactionsData(transactions.transfers));\n        break;\n      case \"debt\":\n        setDataSource(validateTransactionsData(transactions.debts));\n        break;\n      default:\n        break;\n    }\n  };\n\n  const validateTransactionsData = (list) => {\n    var newData = list;\n\n    for (let index = 0; index < newData.length; index++) {\n      const element = newData[index];\n      const time = new Date(element.timestamp);\n      const timeString = time.toDateString();\n      newData[index] = { ...element, key: element.id, timestamp: timeString };\n    }\n    return newData;\n  };\n  return (\n    <div>\n      <Form\n        {...layout}\n        name=\"basic\"\n        initialValues={{ remember: true }}\n        onFinishFailed={onAccountFinishFailed}\n      >\n        <Form.Item\n          label=\"Tài khoản\"\n          className=\"border-bottom border-light p-3\"\n          name=\"SelectedAccount\"\n        >\n          <Select onSelect={onAccountSelected} placeholder=\"Chọn tài khoản\">\n            {accounts(accountsOwner)}\n          </Select>\n        </Form.Item>\n        <Form.Item\n          label=\"Loại giao dịch\"\n          className=\"border-bottom border-light p-3\"\n          name=\"selectType\"\n        >\n          <Select onSelect={renderListTransactions} placeholder=\"Chọn\">\n            {Types(types)}\n          </Select>\n        </Form.Item>\n      </Form>\n      <Table dataSource={dataSource} columns={columns} />\n    </div>\n  );\n};\n\nexport default TransactionsPage;\n","import React, { useState, useContext } from \"react\";\nimport { Menu, Button } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport {\n  AppstoreOutlined,\n  MenuUnfoldOutlined,\n  MenuFoldOutlined,\n  PieChartOutlined,\n  DesktopOutlined,\n  ContainerOutlined,\n  MailOutlined,\n  LogoutOutlined,\n} from \"@ant-design/icons\";\nimport AuthContext from \"../../context/auth/authContext\";\n\nimport Register from \"../auth/Register\";\nimport UserAccount from \"../user/UserAccount\";\nimport BeneficiaryInforPage from \"../user/BeneficiaryInforPage\";\nimport ChangePasswordPage from \"../user/ChangePasswordPage\";\nimport TransferPage from \"../user/TransferPage\";\nimport TransactionsPage from \"../user/transactionsPage/TransactionsPage\";\n\nconst { SubMenu } = Menu;\n\nconst comp = [\n  {\n    title: \"Danh sach tai khoan\",\n    content: <UserAccount />,\n  },\n  {\n    title: \"Thong tin\",\n    content: <BeneficiaryInforPage />,\n  },\n  {\n    title: \"Lịch sử giao dịch\",\n    content: <TransactionsPage />,\n  },\n  {\n    title: \"Chuyển hàng nội địa\",\n    content: <TransferPage />,\n  },\n  {\n    title: \"Ngân hàng khác\",\n    content: \"<TransferInterBankPage />\",\n  },\n  {\n    title: \"Danh sách nợ\",\n    content: \"<CreateDebtPage />\",\n  },\n  {\n    content: \"Danh sách người nhận\",\n    content: <Register />,\n  },\n  {\n    title: \"change password\",\n    content: <ChangePasswordPage />,\n  },\n];\n\nconst NavBar = () => {\n  const authContext = useContext(AuthContext);\n\n  const { logout } = authContext;\n\n  const [collapsed, setCollapsed] = useState(false);\n  const [key, setKey] = useState(\"0\");\n\n  // const toggleCollapsed = () => {\n  //     setCollapsed(!collapsed)\n  // };\n\n  const onLogout = () => {\n    logout();\n  };\n\n  const handleClick = (e) => {\n    setKey(e.key);\n  };\n\n  return (\n    <div className=\"row\">\n      <div className=\"col-3\">\n        <Menu\n          defaultSelectedKeys={[\"0\"]}\n          defaultOpenKeys={[\"sub1\", \"sub2\", \"sub3\"]}\n          mode=\"inline\"\n          theme=\"dark\"\n          inlineCollapsed={collapsed}\n          onClick={handleClick}\n        >\n          <Menu.Item key=\"0\" icon={<PieChartOutlined />}>\n            Danh sách tài khoản\n          </Menu.Item>\n          <Menu.Item key=\"1\" icon={<DesktopOutlined />}>\n            Thông tin\n          </Menu.Item>\n          <Menu.Item key=\"2\" icon={<ContainerOutlined />}>\n            Lịch sử giao dịch\n          </Menu.Item>\n          <SubMenu key=\"sub1\" icon={<MailOutlined />} title=\"Chuyển tiền\">\n            <Menu.Item key=\"3\">Ngân hàng nội địa</Menu.Item>\n            <Menu.Item key=\"4\">Ngân hàng khác</Menu.Item>\n          </SubMenu>\n          <SubMenu key=\"sub2\" icon={<AppstoreOutlined />} title=\"Danh sách\">\n            <Menu.Item key=\"5\">Danh sách nợ</Menu.Item>\n            <Menu.Item key=\"6\">Danh sách người nhận</Menu.Item>\n            <SubMenu key=\"sub3\" title=\"Tài khoản\">\n              <Menu.Item key=\"7\">Đổi mật khẩu</Menu.Item>\n              <Menu.Item onClick={onLogout}>\n                <LogoutOutlined />\n                Logout\n              </Menu.Item>\n            </SubMenu>\n          </SubMenu>\n        </Menu>\n      </div>\n      <div className=\"col-8 p-5 shadow bg-white rounded border \">\n        {\" \"}\n        <h2> {comp[key].title}</h2>\n        {/* {users.error && <span className=\"text-danger\">ERROR: {users.error}</span>}\n                    {users.success && <span className=\"text-success\">SUCCESS: {users.success}</span>} */}\n        {comp[key].content}\n      </div>\n    </div>\n  );\n};\n\nexport default NavBar;\n","\nimport React, { useEffect, useContext } from 'react'\nimport NavBar from '../layout/NavBar';\nimport UserContext from '../../context/user/userContext'\nimport AlertContext from '../../context/alert/alertContext';\nimport { message } from 'antd';\n\nconst Home = () => {\n    const userContext = useContext(UserContext)\n    const alertContext = useContext(AlertContext);\n\n    const { setAlert, alerts } = alertContext;\n    const { getBeneficiries, getAccounts, error, success } = userContext\n\n    useEffect(() => {\n        getAccounts();\n        getBeneficiries();\n\n    }, [])\n\n    console.log(success)\n    return (\n        <div>\n            {error && message.error(\"Opps something wrong\")}\n            {success && message.success(success)}\n\n            <NavBar />\n        </div>\n\n\n    )\n}\n\nexport default Home","import React, { useState, useContext, useEffect } from 'react'\nimport { Form, Input, Button } from 'antd';\nimport AuthContext from '../../context/auth/authContext';\nimport AlertContext from '../../context/alert/alertContext';\n\nconst layout = {\n    // labelCol: {\n    //     span: 8,\n    // },\n    // wrapperCol: {\n    //     span: 16,\n    // },\n};\nconst tailLayout = {\n    // wrapperCol: {\n    //     offset: 8,\n    //     span: 16,\n    // },\n};\n\nconst Login = (props) => {\n    const alertContext = useContext(AlertContext);\n\n    const authContext = useContext(AuthContext);\n\n    const { login, error, clearErrors, isAuthenticated } = authContext;\n    const { setAlert } = alertContext;\n\n    useEffect(() => {\n        if (isAuthenticated) {\n            props.history.push('/');\n        }\n\n        if (error === 'Invalid Credentials') {\n            setAlert(error, 'danger');\n            clearErrors();\n        }\n        // eslint-disable-next-line\n    }, [error, isAuthenticated, props.history]);\n\n\n    const onFinish = values => {\n        console.log('Success:', values);\n        login({\n            ...values\n        });\n    };\n\n    const onFinishFailed = errorInfo => {\n        console.log('Failed:', errorInfo);\n    };\n\n    return (\n        <Form\n\n            name=\"basic\"\n            initialValues={{\n                remember: true,\n            }}\n            onFinish={onFinish}\n            onFinishFailed={onFinishFailed}\n        >\n            <Form.Item\n                label=\"Username\"\n                name=\"username\"\n                rules={[\n                    {\n                        required: true,\n                        message: 'Please input your username!',\n                    },\n                ]}\n            >\n                <Input />\n            </Form.Item>\n\n            <Form.Item\n                label=\"Password\"\n                name=\"password\"\n                rules={[\n                    {\n                        required: true,\n                        message: 'Please input your password!',\n                    },\n                ]}\n            >\n                <Input.Password />\n            </Form.Item>\n\n            <Form.Item >\n                <Button type=\"primary\" htmlType=\"submit\">\n                    Submit\n        </Button>\n            </Form.Item>\n        </Form>\n    );\n};\n\n\nexport default Login","import React, { useContext } from 'react';\nimport AlertContext from '../../context/alert/alertContext';\n\nconst Alerts = () => {\n  const alertContext = useContext(AlertContext);\n\n  return (\n    alertContext.alerts.length > 0 &&\n    alertContext.alerts.map(alert => (\n      <div key={alert.id} className={`alert alert-${alert.type}`}>\n        <i className='fas fa-info-circle' /> {alert.msg}\n      </div>\n    ))\n  );\n};\n\nexport default Alerts;\n","import React, { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n// import AuthContext from '../../context/auth/authContext';\nimport NavBar from '../layout/NavBar'\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  // const authContext = useContext(AuthContext);\n  // const { isAuthenticated, loading } = authContext;\n  // console.log(authContext)\n\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        !localStorage.getItem('token') ? (\n          <Redirect to='/login' />\n        ) : (\n            <Component {...props} />\n          )\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n","import { createContext } from 'react'\n\nconst employeeContext = createContext()\n\nexport default employeeContext","import axios from 'axios';\n\nconst setAuthToken = token => {\n  if (token) {\n    // console.log(token)\n    axios.defaults.headers.common['x-access-token'] = token;\n  } else {\n    delete axios.defaults.headers.common['x-access-token'];\n  }\n};\n\nexport default setAuthToken;\n","\nimport React, { useReducer } from 'react'\nimport axios from 'axios';\nimport EmployeeContext from './employeeContext'\nimport employeeReducer from './employeeReducer'\nimport setAuthToken from '../../utils/setAuthToken'\nimport {\n\n\n} from '../types'\n\nconst EmployeeState = props => {\n    const initialState = {\n        loading: null,\n        error: null,\n        success: null,\n        token: localStorage.getItem('token')\n    }\n\n    const [state, dispatch] = useReducer(employeeReducer, initialState)\n\n\n\n\n    return (\n        <EmployeeContext.Provider\n            value={{\n\n            }}>\n            {props.children}\n        </EmployeeContext.Provider>\n    )\n}\n\nexport default EmployeeState","import { createContext } from 'react'\n\nconst adminContext = createContext()\n\nexport default adminContext","\nimport { USER_ERROR } from '../types'\n\nexport default (state, action) => {\n    switch (action.type) {\n        case USER_ERROR:\n            return {\n                state\n            }\n        default:\n            return state\n    }\n}","export const ADD_CUSTOMER = \"ADD_CUSTOMER\";\nexport const REMOVE_CUSTOMER = \"REMOVE_CUSTOMER\";\nexport const FILTER_CUSTOMERS = \"FILTER_CUSTOMERS\";\nexport const CLEAR_FILTER = \"CLEAR_FILTER\";\nexport const UPDATE_CUSTOMER = \"UPDATE_CUSTOMER\";\n\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\nexport const USER_LOADED = \"USER_LOADED\";\nexport const AUTH_ERROR = \"AUTH_ERROR\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const LOGOUT = \"LOGOUT\";\nexport const CLEAR_ERRORS = \"CLEAR_ERRORS\";\nexport const REMOVE_ALERT = \"REMOVE_ALERT\";\nexport const SET_ALERT = \"SET_ALERT\";\n\nexport const GET_ACCOUNT = \"GET_ACCOUNT\";\nexport const ACCOUNTOWNERS_ERROR = \"ACCOUNTOWNERS_ERROR\";\n\nexport const GET_BENEFICIARIES = \"GET_BENEFICIARIES\";\nexport const BENEFICIARIES_ERROR = \"BENEFICIARIES_ERROR\";\n\nexport const ADD_BENEFICIARY = \"ADD_BENEFICIARY\";\nexport const BENEFICIARY_ERROR = \"BENEFICIARY_ERROR\";\n\nexport const UPDATE_BENEFICIARIES = \"UPDATE_BENEFICIARIES\";\nexport const UPDATE_BENEFICIARIES_ERROR = \"UPDATE_BENEFICIARIES_ERROR\";\n\nexport const CHANGE_PASSWORD = \"CHANGE_PASSWORD\";\nexport const CHANGE_PASSWORD_ERROR = \"CHANGE_PASSWORD_ERROR\";\n\nexport const GET_BENEFICIARY = \"GET_BENEFICIARY\";\n// export const BENEFICIARY_ERROR = 'BENEFICIARY_ERROR'\nexport const USER_ERROR = \"USER_ERROR\";\n\nexport const GET_TRANSACTIONS = \"GET_TRANSACTIONS\";\n","\nimport React, { useReducer } from 'react'\nimport axios from 'axios';\nimport AdminContext from './adminContext'\nimport adminReducer from './adminReducer'\nimport setAuthToken from '../../utils/setAuthToken'\nimport {\n\n\n} from '../types'\n\nconst AdminState = props => {\n    const initialState = {\n        loading: null,\n        error: null,\n        success: null,\n        token: localStorage.getItem('token')\n    }\n\n    const [state, dispatch] = useReducer(adminReducer, initialState)\n\n\n\n\n    return (\n        <AdminContext.Provider\n            value={{\n\n            }}>\n            {props.children}\n        </AdminContext.Provider>\n    )\n}\n\nexport default AdminState","import {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  CLEAR_ERRORS\n} from '../types';\n\nexport default (state, action) => {\n  switch (action.type) {\n    case LOGIN_SUCCESS:\n      console.log(\"login\", action);\n      localStorage.setItem('token', JSON.stringify(action.payload));\n      return {\n        ...state,\n        ...action.payload,\n        isAuthenticated: true,\n        loading: false\n      };\n\n    case USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        loading: false,\n        user: action.payload\n      };\n    case REGISTER_SUCCESS:\n\n    case REGISTER_FAIL:\n    case AUTH_ERROR:\n    case LOGIN_FAIL:\n    case LOGOUT:\n      localStorage.removeItem('token');\n      return {\n        ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        user: null,\n        error: action.payload\n      };\n    case CLEAR_ERRORS:\n      return {\n        ...state,\n        error: null\n      };\n    default:\n      return state;\n  }\n};\n","import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport AuthContext from './authContext';\nimport authReducer from './authReducer';\nimport setAuthToken from '../../utils/setAuthToken';\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  CLEAR_ERRORS\n} from '../types';\n\nconst AuthState = props => {\n  const initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    loading: null,\n    user: null,\n    error: null\n  };\n\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Login User\n  const login = async formData => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/auth', formData, config);\n\n      console.log(res.data)\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data\n      })\n    } catch (err) {\n      dispatch({\n        type: LOGIN_FAIL,\n        payload: err.response.data.msg\n      });\n    }\n    // loadUser();\n  };\n\n  // Register User\n  const register = async formData => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/users', formData, config);\n\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data\n      });\n\n      loadUser();\n    } catch (err) {\n      dispatch({\n        type: REGISTER_FAIL,\n        payload: err.response.data.msg\n      });\n    }\n  };\n\n\n  // Load User\n  const loadUser = async () => {\n    setAuthToken(localStorage.token);\n\n    try {\n      const res = await axios.get('/api/customer/');\n\n      dispatch({\n        type: USER_LOADED,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({ type: AUTH_ERROR });\n    }\n  };\n\n  // Logout\n  const logout = () => dispatch({ type: LOGOUT });\n\n  // Clear Errors\n  const clearErrors = () => dispatch({ type: CLEAR_ERRORS });\n\n  return (\n    <AuthContext.Provider\n      value={{\n        token: state.token,\n        isAuthenticated: state.isAuthenticated,\n        loading: state.loading,\n        user: state.user,\n        error: state.error,\n        // register,\n        // loadUser,\n        login,\n        logout,\n        // clearErrors\n      }}\n    >\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthState;\n","import { SET_ALERT, REMOVE_ALERT } from '../types';\n\nexport default (state, action) => {\n  switch (action.type) {\n    case SET_ALERT:\n      return [...state, action.payload];\n    case REMOVE_ALERT:\n      return state.filter(alert => alert.id !== action.payload);\n    default:\n      return state;\n  }\n};\n","import React, {useReducer} from 'react';\nimport {v4 as uuidv4} from 'uuid';\nimport AlertContext from './alertContext';\nimport alertReducer from './alertReducer';\nimport {SET_ALERT, REMOVE_ALERT} from '../types';\n\nconst AlertState = props => {\n  const initialState = [];\n\n  const [state, dispatch] = useReducer(alertReducer, initialState);\n\n  // Set Alert\n  const setAlert = (msg, type, timeout = 5000) => {\n    const id = uuidv4();\n    dispatch({\n      type: SET_ALERT,\n      payload: {msg, type, id},\n    });\n\n    setTimeout(() => dispatch({type: REMOVE_ALERT, payload: id}), timeout);\n  };\n\n  return (\n    <AlertContext.Provider\n      value={{\n        alerts: state,\n        setAlert,\n      }}>\n      {props.children}\n    </AlertContext.Provider>\n  );\n};\n\nexport default AlertState;\n","import {\n  GET_ACCOUNT,\n  ACCOUNTOWNERS_ERROR,\n  GET_BENEFICIARIES,\n  BENEFICIARIES_ERROR,\n  ADD_BENEFICIARY,\n  BENEFICIARY_ERROR,\n  UPDATE_BENEFICIARIES,\n  UPDATE_BENEFICIARIES_ERROR,\n  CHANGE_PASSWORD,\n  CHANGE_PASSWORD_ERROR,\n  GET_BENEFICIARY,\n  GET_TRANSACTIONS,\n  USER_ERROR,\n  // BENEFICIARY_ERROR\n} from \"../types\";\n\nexport default (state, action) => {\n  switch (action.type) {\n    case GET_ACCOUNT:\n      return {\n        ...state,\n        accountsOwner: action.payload,\n        error: null,\n        // success: \"success\",\n        loading: false,\n      };\n    // case ADD_BENEFICIARY:\n    //     return {\n    //         ...state,\n    //         beneficiaries: [action.payload, ...state.beneficiaries],\n    //         error: null,\n    //         success: \"success\",\n    //         loading: false\n    //     }\n    case GET_BENEFICIARIES:\n      return {\n        ...state,\n        beneficiaries: action.payload,\n        error: null,\n        // success: \"success\",\n        loading: false,\n      };\n    case ADD_BENEFICIARY:\n      return {\n        ...state,\n        addBeneficiaryRes: action.payload,\n        error: null,\n        success: \"add beneficiary successfully\",\n        loading: false,\n      };\n    case UPDATE_BENEFICIARIES:\n      return {\n        ...state,\n        res: action.payload,\n        error: null,\n        success: \"update successfully\",\n        loading: false,\n      };\n    case CHANGE_PASSWORD:\n      return {\n        ...state,\n        res: action.payload,\n        error: null,\n        success: \"change password successfully!!\",\n        loading: false,\n      };\n    case GET_BENEFICIARY:\n      return {\n        ...state,\n        beneficiary: action.payload,\n        error: null,\n        // success: \"success\",\n        loading: false,\n      };\n    case GET_TRANSACTIONS:\n      return {\n        ...state,\n        transactions: action.payload,\n        error: null,\n        loading: false,\n      };\n    case USER_ERROR:\n      return {\n        ...state,\n        error: action.payload,\n        success: null,\n        loading: false,\n      };\n    // case BENEFICIARIES_ERROR:\n    // case BENEFICIARY_ERROR:\n    // case UPDATE_BENEFICIARIES_ERROR:\n    // case CHANGE_PASSWORD_ERROR:\n    default:\n      return state;\n  }\n};\n","import React, { useReducer } from \"react\";\nimport axios from \"axios\";\nimport UserContext from \"./userContext\";\nimport userReducer from \"./userReducer\";\nimport setAuthToken from \"../../utils/setAuthToken\";\nimport {\n  GET_ACCOUNT,\n  ACCOUNTOWNERS_ERROR,\n  GET_BENEFICIARIES,\n  BENEFICIARIES_ERROR,\n  ADD_BENEFICIARY,\n  BENEFICIARY_ERROR,\n  UPDATE_BENEFICIARIES,\n  UPDATE_BENEFICIARIES_ERROR,\n  CHANGE_PASSWORD,\n  CHANGE_PASSWORD_ERROR,\n  GET_BENEFICIARY,\n  USER_ERROR,\n  GET_TRANSACTIONS,\n  // BENEFICIARY_ERROR,\n} from \"../types\";\n\nconst UserState = (props) => {\n  const initialState = {\n    loading: null,\n    accountsOwner: [],\n    beneficiaries: [],\n    error: null,\n    success: null,\n    beneficiary: {},\n    addBeneficiaryRes: null,\n    getTransactions: null,\n    token: localStorage.getItem(\"token\"),\n  };\n\n  const [state, dispatch] = useReducer(userReducer, initialState);\n\n  //get account user\n\n  const getAccounts = async () => {\n    setAuthToken(JSON.parse(localStorage.getItem(\"token\"))[\"accessToken\"]);\n\n    try {\n      const res = await axios.get(\"/api/customer/accounts\");\n      dispatch({\n        type: GET_ACCOUNT,\n        payload: res.data,\n      });\n    } catch (err) {\n      dispatch({\n        type: USER_ERROR,\n        payload: err.response,\n      });\n    }\n  };\n\n  //get list beneficiary\n\n  const getBeneficiries = async () => {\n    setAuthToken(JSON.parse(localStorage.getItem(\"token\"))[\"accessToken\"]);\n\n    try {\n      const res = await axios.get(\"/api/customer/beneficiaries\");\n\n      dispatch({\n        type: GET_BENEFICIARIES,\n        payload: res.data,\n      });\n    } catch (err) {\n      dispatch({\n        type: USER_ERROR,\n        payload: err.response,\n      });\n    }\n  };\n\n  //add beneficiary\n\n  const addBeneficiary = async (contact) => {\n    setAuthToken(JSON.parse(localStorage.getItem(\"token\"))[\"accessToken\"]);\n\n    try {\n      const res = await axios.post(\"/api/customer/add-beneficiary\", contact);\n\n      dispatch({\n        type: ADD_BENEFICIARY,\n        payload: res.data,\n      });\n    } catch (err) {\n      console.log(err.response);\n      dispatch({\n        type: USER_ERROR,\n        payload: err.response,\n      });\n    }\n  };\n\n  //update list beneficiary\n\n  const updateListBeneficiaryInfo = async (listInfo) => {\n    setAuthToken(JSON.parse(localStorage.getItem(\"token\"))[\"accessToken\"]);\n\n    try {\n      const res = await axios.post(\n        \"/api/customer/update-beneficiary/\",\n        listInfo\n      );\n\n      dispatch({\n        type: UPDATE_BENEFICIARIES,\n        payload: res.data,\n      });\n    } catch (err) {\n      dispatch({\n        type: USER_ERROR,\n        payload: err.response,\n      });\n    }\n  };\n\n  //change password\n\n  const changePassword = async (passwords) => {\n    setAuthToken(JSON.parse(localStorage.getItem(\"token\"))[\"accessToken\"]);\n\n    try {\n      const res = await axios.put(\n        \"/api/customer/passwords/ibanking\",\n        passwords\n      );\n\n      dispatch({\n        type: CHANGE_PASSWORD,\n        payload: res.data,\n      });\n    } catch (err) {\n      dispatch({\n        type: USER_ERROR,\n        payload: err.response,\n      });\n    }\n  };\n\n  // get beneficiary account\n\n  const getBeneficiry = async (accnumber) => {\n    setAuthToken(JSON.parse(localStorage.getItem(\"token\"))[\"accessToken\"]);\n\n    try {\n      const res = await axios.post(\"/api/account/\", accnumber);\n\n      dispatch({\n        type: GET_BENEFICIARY,\n        payload: res.data,\n      });\n    } catch (err) {\n      dispatch({\n        type: BENEFICIARY_ERROR,\n        payload: err.response,\n      });\n    }\n  };\n  //   function getTransactions(account_number) {\n  //     const requestOptions = {\n  //         method: 'GET',\n  //         headers: { ...authHeader(), 'Content-Type': 'application/json' },\n  //         // : JSON.stringify(account_number)\n  //         params: JSON.stringify(account_number),\n\n  //     };\n  //     return fetch(config.apiUrl + '/api/customer/transactions/normal?account_number=' +account_number, requestOptions).then(handleResponse, handleError);\n  // }\n\n  const getTransactions = async (accountNumber) => {\n    setAuthToken(JSON.parse(localStorage.getItem(\"token\"))[\"accessToken\"]);\n    try {\n      const res = await axios.get(\n        \"/api/customer/transactions/normal?account_number=\" + accountNumber\n      );\n      dispatch({\n        type: GET_TRANSACTIONS,\n        payload: res.data,\n      });\n    } catch (err) {\n      dispatch({\n        type: GET_TRANSACTIONS,\n        payload: err.response,\n      });\n    }\n  };\n  return (\n    <UserContext.Provider\n      value={{\n        accountsOwner: state.accountsOwner,\n        beneficiaries: state.beneficiaries,\n        addBeneficiaryRes: state.addBeneficiaryRes,\n        beneficiary: state.beneficiary,\n        transactions: state.transactions,\n        success: state.success,\n        error: state.error,\n        getAccounts,\n        getBeneficiries,\n        updateListBeneficiaryInfo,\n        addBeneficiary,\n        changePassword,\n        getBeneficiry,\n        getTransactions,\n      }}\n    >\n      {props.children}\n    </UserContext.Provider>\n  );\n};\n\nexport default UserState;\n","import React, { Fragment } from 'react';\nimport 'antd/dist/antd.css';\nimport './App.css';\nimport NavBar from './components/layout/NavBar'\nimport Home from './components/pages/Home'\nimport Register from './components/auth/Register'\nimport Login from './components/auth/Login'\nimport Alerts from './components/layout/Alerts';\nimport PrivateRoute from './components/routing/PrivateRoute';\n\nimport EmployeeState from './context/employee/employeeState'\nimport AdminState from './context/admin/adminState'\nimport AuthState from './context/auth/AuthState'\nimport AlertState from './context/alert/AlertState';\nimport UserState from './context/user/userState'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\n\nconst App = () => {\n  return (\n    <AuthState>\n      <UserState>\n        <AlertState>\n          <EmployeeState>\n            <AdminState>\n              <Router>\n                <Fragment>\n                  <Switch>\n                    <div>\n                      {/* <NavBar /> */}\n                      {/* <div className=\"offset-1 mt-3 shadow bg-white rounded border d-flex justify-content-center align-items-center\" style={{ width: 65 + '%' }}> */}\n                      <Alerts />\n                      <PrivateRoute exact path='/' component={Home} />\n                      {/* <PrivateRoute path='/register' component={Register} /> */}\n                      {/* <Route exact path=\"/\" component={Home} /> */}\n                      <Route exact path=\"/login\" component={Login} />\n                      {/*</div> */}\n                    </div>\n                  </Switch>\n                </Fragment>\n              </Router>\n            </AdminState>\n          </EmployeeState>\n        </AlertState>\n      </UserState>\n    </AuthState>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}